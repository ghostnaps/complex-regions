"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[66],{87870:function(e){e.exports=JSON.parse('{"functions":[{"name":"createRegion","desc":"Helper function that will create a Region, set its whitelist, and also\\nlisten for instances entering and leaving.\\n\\nUsage:\\n\\n```lua\\nlocal region = ComplexRegions.createRegion(workspace.Region, {\\n\\tPlayers.LocalPlayer.Character\\n})\\n\\nregion.entered:Connect(function(instance: Instance)\\n\\tprint(instance, \\"entered the region\\")\\nend)\\n\\nregion.left:Connect(function(instance: Instance)\\n\\tprint(instance, \\"left the region\\")\\nend)\\n```","params":[{"name":"regionInstance","desc":"The instance that represents the region","lua_type":"Model | BasePart"},{"name":"whitelist","desc":"Array of Instances that will trigger the region\'s events","lua_type":"{ Instance }"}],"returns":[{"desc":"","lua_type":"Region"}],"function_type":"static","source":{"line":30,"path":"src/createRegion.lua"}}],"properties":[{"name":"Region","desc":"The Region class is exposed on the API but should typically be instantiated\\nwith the `createRegion` function.\\n\\n```lua\\nlocal regionInstance = Instance.new(\\"Part\\")\\nlocal region = ComplexRegions.Region.new(regionInstance)\\n```","lua_type":"Region","source":{"line":19,"path":"src/init.lua"}}],"types":[],"name":"ComplexRegions","desc":"![](/example.png)","source":{"line":6,"path":"src/init.lua"}}')}}]);